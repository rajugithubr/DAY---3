
class Node {
    int data;  
    Node next; 
    Node(int data) {
        this.data = data;
        this.next = null;
    }
}
class StackUsingLinkedList {
    private Node top; 
    public StackUsingLinkedList() {
        this.top = null;
    }
    public void push(int data) {
        Node newNode = new Node(data);
        newNode.next = top;
        top = newNode;
        System.out.println(data + " pushed to stack");
    }
    
    public boolean isEmpty() {
        return top == null;
    }
    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
            return -1;  
        }
        
        int poppedData = top.data;
        top = top.next; 
        return poppedData;
    }
    public int peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
            return -1;
        }
        return top.data;
    }
    public void display() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
            return;
        }
        
        Node current = top;
        System.out.print("Stack: ");
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }
}
public class Main {
    public static void main(String[] args) {
        StackUsingLinkedList stack = new StackUsingLinkedList();
        
        stack.push(10);
        stack.push(20);
        stack.push(30);
        stack.display();
        
        System.out.println("Top element is: " + stack.peek());
        
        System.out.println("Popped element: " + stack.pop());
        stack.display();
    }
}
